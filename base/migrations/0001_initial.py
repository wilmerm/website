# Generated by Django 3.1.3 on 2020-12-18 01:29

import base.models
import datetime
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('sites', '0002_alter_domain_unique'),
    ]

    operations = [
        migrations.CreateModel(
            name='SocialNetwork',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('social_network_name', models.CharField(choices=[('facebook', 'Facebook'), ('instagram', 'Instagram'), ('linkedin', 'LinkedIn'), ('pinterest', 'Pinterest'), ('snapchat', 'Snapchat'), ('telegram', 'Telegram'), ('tumblr', 'Tumblr'), ('twitter', 'Twitter'), ('vkontakte', 'Vkontakte'), ('whatsapp', 'Whatsapp'), ('youtube', 'Youtube')], max_length=20, verbose_name='Red social')),
                ('url', models.URLField(help_text='Enlace hacia su perfil en esta red social.', unique=True, verbose_name='URL')),
                ('index', models.IntegerField(default=0, help_text='Ordena los links de las redes sociales acorde a este indice.', validators=[django.core.validators.MinValueValidator(-99), django.core.validators.MaxValueValidator(99)], verbose_name='Indice')),
                ('site', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, to='sites.site')),
            ],
            options={
                'verbose_name': 'Red social',
                'verbose_name_plural': 'Redes sociales',
                'ordering': ['index', 'social_network_name'],
            },
        ),
        migrations.CreateModel(
            name='Slide',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='slide', verbose_name='Imagen')),
                ('title', models.CharField(blank=True, max_length=70, verbose_name='Título')),
                ('description', models.CharField(blank=True, max_length=200, verbose_name='Descripción')),
                ('index', models.IntegerField(default=0, help_text='Orden de las diapositivas.', validators=[django.core.validators.MinValueValidator(-100), django.core.validators.MaxValueValidator(100)], verbose_name='Indice')),
                ('is_active', models.BooleanField(default=True, verbose_name='Activa')),
                ('site', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, to='sites.site')),
            ],
            options={
                'verbose_name': 'Diapositiva',
                'verbose_name_plural': 'Diapositivas',
                'ordering': ['index', 'id'],
            },
        ),
        migrations.CreateModel(
            name='Setting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('website_name', models.CharField(help_text='Nombre de este sitio. ', max_length=70, verbose_name='Nombre del sitio')),
                ('icon', models.ImageField(blank=True, help_text='Imagen que aparecerá junto al título en la pestaña del navegador web. Esta imagen debe ser cuadrada, de no serlo se recortará para conseguir la dimensión requerida.', null=True, upload_to='setting', verbose_name='Icono del sitio')),
                ('logo', models.ImageField(blank=True, null=True, upload_to='setting', verbose_name='Logo')),
                ('description', models.CharField(blank=True, help_text='Breve descripción del sitio.', max_length=200, verbose_name='Descripción')),
                ('cover', models.ImageField(blank=True, help_text='Imagen de portada que se mostraráen la parte superior.', null=True, upload_to='setting', verbose_name='Portada')),
                ('cover_height', models.IntegerField(default=256, help_text='Altura que tendrá la portada.', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(512)], verbose_name='Portada tamaño')),
                ('phone1', models.CharField(blank=True, max_length=20, verbose_name='Central telefónica')),
                ('phone2', models.CharField(blank=True, max_length=20, verbose_name='Teléfono secundario')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='Correo electrónico')),
                ('address', models.CharField(blank=True, max_length=256, verbose_name='Dirección principal')),
                ('schedule', models.CharField(blank=True, max_length=150, verbose_name='Horario de trabajo')),
                ('about_title', models.CharField(blank=True, max_length=70, verbose_name='Acerca de: Título')),
                ('about_content', models.TextField(blank=True, verbose_name='Acerca de: Contenido')),
                ('about_image_cover', models.ImageField(blank=True, upload_to='about', verbose_name='Acerca de: Portada')),
                ('about_image_footer', models.ImageField(blank=True, upload_to='about', verbose_name='Acerca de: Imagen pie de página')),
                ('information_title', models.CharField(blank=True, default='Póngase en contacto con nostros', max_length=70, verbose_name='Información: Título')),
                ('information_content', models.TextField(blank=True, default='Póngase en contacto con nostros ahora mismo.', verbose_name='Información: Contenido')),
                ('registration_message', models.TextField(blank=True, default='Si aún no estás registrado, por favor, cree una cuenta con nosotros.', help_text='Mensaje que se muestra a los usuarios en la página de inicio de sesión, invitándolos a que, de no estar registrados, que se registren.', verbose_name='Mensaje para nuevos registros')),
                ('embed_map_html', models.TextField(blank=True, help_text='Código HTML/Javascript que se mostrará en una de las partes de la página principal como el mapa.', verbose_name='Código inserción de mapa')),
                ('embed_promo_url', models.URLField(blank=True, help_text='URL del contenido externo que desea mostrar como promoción en la página principal. Esta url puede bien ser la url de un video en Youtube, una imagen, o un contenido html.', verbose_name='URL de promoción incrustrada')),
                ('site', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, to='sites.site')),
            ],
            options={
                'verbose_name': 'Ajustes',
                'verbose_name_plural': 'Ajustes',
            },
        ),
        migrations.CreateModel(
            name='Schedule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('monday', models.BooleanField(default=True, verbose_name='Lunes')),
                ('monday_ini', models.TimeField(blank=True, default=datetime.time(8, 0), null=True, verbose_name='Lunes: desde')),
                ('monday_end', models.TimeField(blank=True, default=datetime.time(18, 0), null=True, verbose_name='Lunes: hasta')),
                ('tuesday', models.BooleanField(default=True, verbose_name='Tuesday')),
                ('tuesday_ini', models.TimeField(blank=True, default=datetime.time(8, 0), null=True, verbose_name='Tuesday: desde')),
                ('tuesday_end', models.TimeField(blank=True, default=datetime.time(18, 0), null=True, verbose_name='Tuesday: hasta')),
                ('wednesday', models.BooleanField(default=True, verbose_name='Wednesday')),
                ('wednesday_ini', models.TimeField(blank=True, default=datetime.time(8, 0), null=True, verbose_name='Wednesday: desde')),
                ('wednesday_end', models.TimeField(blank=True, default=datetime.time(18, 0), null=True, verbose_name='Wednesday: hasta')),
                ('thursday', models.BooleanField(default=True, verbose_name='Thursday')),
                ('thursday_ini', models.TimeField(blank=True, default=datetime.time(8, 0), null=True, verbose_name='Thursday: desde')),
                ('thursday_end', models.TimeField(blank=True, default=datetime.time(18, 0), null=True, verbose_name='Thursday: hasta')),
                ('friday', models.BooleanField(default=True, verbose_name='Friday')),
                ('friday_ini', models.TimeField(blank=True, default=datetime.time(8, 0), null=True, verbose_name='Friday: desde')),
                ('friday_end', models.TimeField(blank=True, default=datetime.time(18, 0), null=True, verbose_name='Friday: hasta')),
                ('saturday', models.BooleanField(default=True, verbose_name='Saturday')),
                ('saturday_ini', models.TimeField(blank=True, default=datetime.time(8, 0), null=True, verbose_name='Saturday: desde')),
                ('saturday_end', models.TimeField(blank=True, default=datetime.time(12, 0), null=True, verbose_name='Saturday: hasta')),
                ('sunday', models.BooleanField(default=False, verbose_name='Sunday')),
                ('sunday_ini', models.TimeField(blank=True, default=datetime.time(8, 0), null=True, verbose_name='Sunday: desde')),
                ('sunday_end', models.TimeField(blank=True, default=datetime.time(12, 0), null=True, verbose_name='Sunday: hasta')),
                ('site', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, to='sites.site')),
            ],
            options={
                'verbose_name': 'Horario de servicio',
                'verbose_name_plural': 'Horario de servicio',
            },
        ),
        migrations.CreateModel(
            name='SampleVideo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=70, verbose_name='Título')),
                ('description', models.CharField(blank=True, max_length=700, verbose_name='Descripción')),
                ('video', models.FileField(upload_to='saplevideo', validators=[base.models.validate_video_size], verbose_name='Video')),
                ('index', models.IntegerField(default=0, help_text='Orden en que será mostrado el video con respecto a otro.', verbose_name='Indice')),
                ('site', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, to='sites.site')),
            ],
            options={
                'verbose_name': 'Video de muestra',
                'verbose_name_plural': 'Videos de muestra',
                'ordering': ['index'],
            },
        ),
        migrations.CreateModel(
            name='SampleImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=70, verbose_name='Título')),
                ('description', models.CharField(blank=True, max_length=700, verbose_name='Descripción')),
                ('image', models.ImageField(upload_to='sapleimage', validators=[base.models.validate_image_size], verbose_name='Imágen')),
                ('index', models.IntegerField(default=0, help_text='Orden en que será mostrada la imagen con respecto a otra.', verbose_name='Indice')),
                ('site', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, to='sites.site')),
            ],
            options={
                'verbose_name': 'Imagen de muestra',
                'verbose_name_plural': 'Imágenes de muestra',
                'ordering': ['index'],
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(max_length=100, unique=True, verbose_name='Pregunta')),
                ('answer', models.CharField(max_length=700, verbose_name='Respuesta')),
                ('site', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, to='sites.site')),
            ],
            options={
                'verbose_name': 'Pregunta',
                'verbose_name_plural': 'Preguntas',
            },
        ),
        migrations.CreateModel(
            name='BrandRepresented',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nombre')),
                ('image', models.ImageField(help_text='Logo de la marca. Se recomienda una imagen cuadrada, con fondo transparente, en formato PNG o GIF.', upload_to='brand', verbose_name='Imagen')),
                ('cover', models.ImageField(blank=True, help_text='Imagen que se usará como fondo para ambientar la sección de la marca. Se recomienda una imagen en alta resolución, con dimensión rectangular más ancha que alta.', upload_to='brand', verbose_name='Portada')),
                ('url', models.URLField(blank=True, help_text='Dirección URL del sitio web de la marca.', verbose_name='Web Site')),
                ('index', models.IntegerField(default=0, help_text='Determina la posición que ocupará la marca cuando se muestre junto a las demás. Las marcas se mostrarán en orden en función de su indice, de mejor a mayor.', verbose_name='Indice')),
                ('site', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, to='sites.site')),
            ],
            options={
                'verbose_name': 'Marca',
                'verbose_name_plural': 'Marcas',
                'ordering': ['index'],
            },
        ),
        migrations.CreateModel(
            name='AdvancedSetting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('site', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, to='sites.site')),
            ],
            options={
                'verbose_name': 'Configuración avanzada',
                'verbose_name_plural': 'Configuración avanzada',
            },
        ),
    ]
